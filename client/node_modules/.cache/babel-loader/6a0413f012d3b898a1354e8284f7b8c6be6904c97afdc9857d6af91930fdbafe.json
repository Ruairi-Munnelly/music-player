{"ast":null,"code":"var _jsxFileName = \"/Users/ruairimunnelly/React/music-player/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport data from './data.js';\nimport Nav from './components/Navb.js';\nimport Song from './components/Song.js';\nimport Player from './components/PlayerSong.js';\nimport Library from './components/Library.js';\nimport './styles/app.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const audioRef = useRef(null);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0\n  });\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round(roundedCurrent / roundedDuration * 100);\n    console.log();\n    setSongInfo({\n      currentTime: current,\n      duration,\n      animationPercentage: animation\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  let navProps = {\n    libraryStatus: libraryStatus,\n    setLibraryStatus: setLibraryStatus\n  };\n  let libraryProps = {\n    songs: songs,\n    isPlaying: isPlaying,\n    libraryStatus: libraryStatus,\n    setLibraryStatus: setLibraryStatus,\n    setSongs: setSongs,\n    setCurrentSong: setCurrentSong,\n    audioRef: audioRef\n  };\n  let playerProps = {\n    id: songs.id,\n    songs: songs,\n    setSongs: setSongs,\n    songInfo: songInfo,\n    setSongInfo: setSongInfo,\n    isPlaying: isPlaying,\n    setIsPlaying: setIsPlaying,\n    currentSong: currentSong,\n    setCurrentSong: setCurrentSong,\n    audioRef: audioRef\n  };\n  fetch('/public/audio/cloudkicker_to_scale_not_painted.mp3').then(res => {\n    if (!res.ok) {\n      throw Error('File not found');\n    }\n    return res.blob();\n  }).then(myBlob => {\n    console.log(myBlob);\n    const reader = new FileReader();\n    reader.onload = e => {\n      console.log(e.target.result);\n    };\n    reader.readAsDataURL(myBlob);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      ...navProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      ...libraryProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      ...playerProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onLoadedMetadata: timeUpdateHandler,\n      onTimeUpdate: timeUpdateHandler,\n      src: currentSong.audio,\n      ref: audioRef,\n      onEnded: songEndHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U9C5xTIaWO6nMDkfq5nLJzu4nwA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","data","Nav","Song","Player","Library","jsxDEV","_jsxDEV","App","_s","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","libraryStatus","setLibraryStatus","audioRef","songInfo","setSongInfo","currentTime","duration","animationPercentage","timeUpdateHandler","e","current","target","roundedCurrent","Math","round","roundedDuration","animation","console","log","songEndHandler","currentIndex","findIndex","song","id","length","play","navProps","libraryProps","playerProps","fetch","then","res","ok","Error","blob","myBlob","reader","FileReader","onload","result","readAsDataURL","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoadedMetadata","onTimeUpdate","src","audio","ref","onEnded","_c","$RefreshReg$"],"sources":["/Users/ruairimunnelly/React/music-player/src/App.js"],"sourcesContent":["import React, {useState, useRef} from 'react'\nimport data from './data.js';\nimport Nav from './components/Navb.js'\nimport Song from './components/Song.js';\nimport Player from './components/PlayerSong.js';\nimport Library from './components/Library.js'\nimport './styles/app.scss';\n\nfunction App() {\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const audioRef = useRef(null);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n\n  const timeUpdateHandler = (e) => { \n    const current = e.target.currentTime; \n    const duration = e.target.duration;  \n    const roundedCurrent = Math.round(current); \n    const roundedDuration = Math.round(duration); \n    const animation = Math.round((roundedCurrent / roundedDuration) * 100); \n    console.log(); \n    setSongInfo({ \n      currentTime: current, \n      duration, \n      animationPercentage: animation, \n    }); \n  }; \n  const songEndHandler = async () => { \n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id); \n  \n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]); \n  \n    if (isPlaying) audioRef.current.play(); \n  }; \n\n  let navProps = {\n    libraryStatus: libraryStatus,\n    setLibraryStatus: setLibraryStatus,\n  }\n\n  let libraryProps = { \n    songs: songs,\n    isPlaying: isPlaying,\n    libraryStatus: libraryStatus,\n    setLibraryStatus: setLibraryStatus,\n    setSongs: setSongs,\n    setCurrentSong: setCurrentSong,\n    audioRef: audioRef\n  }\n\n  let playerProps = {\n    id: songs.id,\n    songs: songs,\n    setSongs: setSongs,\n    songInfo: songInfo,\n    setSongInfo: setSongInfo,\n    isPlaying: isPlaying,\n    setIsPlaying: setIsPlaying,\n    currentSong: currentSong,\n    setCurrentSong: setCurrentSong,\n    audioRef: audioRef,\n  }\n\n  fetch('/public/audio/cloudkicker_to_scale_not_painted.mp3')\n  .then(res => {\n    if (!res.ok) {\n      throw Error('File not found');\n    } \n    return res.blob();\n  })\n  .then( myBlob => {\n    console.log(myBlob);\n    const reader = new FileReader();\n      reader.onload = e => {\n        console.log(e.target.result);\n      };\n      reader.readAsDataURL(myBlob);\n  })\n\n  return (\n    <div>\n      <Nav {...navProps} />\n      <Song currentSong={currentSong} />\n        <Library {...libraryProps} />\n      <Player {...playerProps} />\n        <audio \n        onLoadedMetadata={timeUpdateHandler} \n        onTimeUpdate={timeUpdateHandler} \n        src={currentSong.audio} \n        ref={audioRef} \n        onEnded={songEndHandler} \n      ></audio> \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}